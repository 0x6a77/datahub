(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{148:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return b}));var r=n(164),a=n(165),o=(n(0),n(166)),i={title:"Contributing",hide_title:!0,slug:"/contributing",custom_edit_url:"https://github.com/linkedin/datahub/blob/master/docs/CONTRIBUTING.md"},c={unversionedId:"docs/CONTRIBUTING",id:"docs/CONTRIBUTING",isDocsHomePage:!1,title:"Contributing",description:"Contributing",source:"@site/genDocs/docs/CONTRIBUTING.md",slug:"/contributing",permalink:"/docs/contributing",editUrl:"https://github.com/linkedin/datahub/blob/master/docs/CONTRIBUTING.md",version:"current",sidebar:"overviewSidebar",previous:{title:"Roadmap",permalink:"/docs/roadmap"},next:{title:"Demo",permalink:"/docs/demo"}},s=[{value:"Reporting issues",id:"reporting-issues",children:[]},{value:"Submitting a Request For Comment (RFC)",id:"submitting-a-request-for-comment-rfc",children:[]},{value:"Submitting a Pull Request (PR)",id:"submitting-a-pull-request-pr",children:[]},{value:"Commit Message Format",id:"commit-message-format",children:[{value:"Type",id:"type",children:[]},{value:"Description",id:"description",children:[]},{value:"Body",id:"body",children:[]},{value:"Footer",id:"footer",children:[]},{value:"Revert",id:"revert",children:[]}]}],l={rightToc:s};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"contributing"},"Contributing"),Object(o.b)("p",null,"We always welcome contributions to help make DataHub better. Take a moment to read this document if you would like to contribute."),Object(o.b)("h2",{id:"reporting-issues"},"Reporting issues"),Object(o.b)("p",null,"We use GitHub issues to track bug reports, feature requests, and submitting pull requests."),Object(o.b)("p",null,"If you find a bug:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Use the GitHub issue search to check whether the bug has already been reported.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"If the issue has been fixed, try to reproduce the issue using the latest master branch of the repository.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"If the issue still reproduces or has not yet been reported, try to isolate the problem before opening an issue."))),Object(o.b)("h2",{id:"submitting-a-request-for-comment-rfc"},"Submitting a Request For Comment (RFC)"),Object(o.b)("p",null,"If you have a substantial feature or a design discussion that you'd like to have with the community follow the RFC process outlined ",Object(o.b)("a",{parentName:"p",href:"/docs/rfc"},"here")),Object(o.b)("h2",{id:"submitting-a-pull-request-pr"},"Submitting a Pull Request (PR)"),Object(o.b)("p",null,"Before you submit your Pull Request (PR), consider the following guidelines:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Search GitHub for an open or closed PR that relates to your submission. You don't want to duplicate effort."),Object(o.b)("li",{parentName:"ul"},"Follow the ",Object(o.b)("a",{parentName:"li",href:"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request-from-a-fork"},"standard GitHub approach")," to create the PR. Please also follow our ",Object(o.b)("a",{parentName:"li",href:"#commit-message-format"},"commit message format"),"."),Object(o.b)("li",{parentName:"ul"},"That's it! Thank you for your contribution!")),Object(o.b)("h2",{id:"commit-message-format"},"Commit Message Format"),Object(o.b)("p",null,"Please follow the ",Object(o.b)("a",{parentName:"p",href:"https://www.conventionalcommits.org/"},"Conventional Commits")," specification for the commit message format. In summary, each commit message consists of a ",Object(o.b)("em",{parentName:"p"},"header"),", a ",Object(o.b)("em",{parentName:"p"},"body")," and a ",Object(o.b)("em",{parentName:"p"},"footer"),", separated by a single blank line."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"<type>[optional scope]: <description>\n\n[optional body]\n\n[optional footer(s)]\n")),Object(o.b)("p",null,"Any line of the commit message cannot be longer than 88 characters! This allows the message to be easier to read on GitHub as well as in various Git tools."),Object(o.b)("h3",{id:"type"},"Type"),Object(o.b)("p",null,"Must be one of the following (based on the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines"},"Angular convention"),"):"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"feat"),": A new feature"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"fix"),": A bug fix"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"refactor"),": A code change that neither fixes a bug nor adds a feature"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"docs"),": Documentation only changes"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"test"),": Adding missing tests or correcting existing tests"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"perf"),": A code change that improves performance"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"style"),": Changes that do not affect the meaning of the code (whitespace, formatting, missing semicolons, etc.)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"build"),": Changes that affect the build system or external dependencies"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"ci"),": Changes to our CI configuration files and scripts")),Object(o.b)("p",null,"A scope may be provided to a commit\u2019s type, to provide additional contextual information and is contained within parenthesis, e.g., "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"feat(parser): add ability to parse arrays\n")),Object(o.b)("h3",{id:"description"},"Description"),Object(o.b)("p",null,"Each commit must contain a succinct description of the change:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},'use the imperative, present tense: "change" not "changed" nor "changes"'),Object(o.b)("li",{parentName:"ul"},"don't capitalize the first letter"),Object(o.b)("li",{parentName:"ul"},"no dot(.) at the end")),Object(o.b)("h3",{id:"body"},"Body"),Object(o.b)("p",null,'Just as in the description, use the imperative, present tense: "change" not "changed" nor "changes". The body should include the motivation for the change and contrast this with previous behavior.'),Object(o.b)("h3",{id:"footer"},"Footer"),Object(o.b)("p",null,"The footer should contain any information about ",Object(o.b)("em",{parentName:"p"},"Breaking Changes"),", and is also the place to reference GitHub issues that this commit ",Object(o.b)("em",{parentName:"p"},"Closes"),"."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Breaking Changes")," should start with the words ",Object(o.b)("inlineCode",{parentName:"p"},"BREAKING CHANGE:")," with a space or two new lines. The rest of the commit message is then used for this."),Object(o.b)("h3",{id:"revert"},"Revert"),Object(o.b)("p",null,"If the commit reverts a previous commit, it should begin with ",Object(o.b)("inlineCode",{parentName:"p"},"revert:"),", followed by the description. In the body it should say: ",Object(o.b)("inlineCode",{parentName:"p"},"Refs: <hash1> <hash2> ..."),", where the hashs are the SHA of the commits being reverted, e.g. "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"revert: let us never again speak of the noodle incident\n\nRefs: 676104e, a215868\n")))}b.isMDXComponent=!0},164:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return r}))},165:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n.d(t,"a",(function(){return r}))},166:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),b=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=b(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=b(n),m=r,d=u["".concat(i,".").concat(m)]||u[m]||p[m]||o;return n?a.a.createElement(d,c(c({ref:t},l),{},{components:n})):a.a.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);