"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[2142],{4137:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return c}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),d=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=d(e.components);return a.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=d(t),c=r,k=m["".concat(u,".").concat(c)]||m[c]||p[c]||l;return t?a.createElement(k,i(i({ref:n},s),{},{components:t})):a.createElement(k,i({ref:n},s))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=m;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=t[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3134:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return s},default:function(){return m}});var a=t(7462),r=t(3366),l=(t(7294),t(4137)),i=["components"],o={title:"Tableau",sidebar_label:"Tableau",slug:"/metadata-ingestion/source_docs/tableau",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/source_docs/tableau.md"},u="Tableau",d={unversionedId:"metadata-ingestion/source_docs/tableau",id:"metadata-ingestion/source_docs/tableau",isDocsHomePage:!1,title:"Tableau",description:"For context on getting started with ingestion, check out our metadata ingestion guide.",source:"@site/genDocs/metadata-ingestion/source_docs/tableau.md",sourceDirName:"metadata-ingestion/source_docs",slug:"/metadata-ingestion/source_docs/tableau",permalink:"/docs/metadata-ingestion/source_docs/tableau",editUrl:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/source_docs/tableau.md",tags:[],version:"current",frontMatter:{title:"Tableau",sidebar_label:"Tableau",slug:"/metadata-ingestion/source_docs/tableau",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/source_docs/tableau.md"},sidebar:"overviewSidebar",previous:{title:"Superset",permalink:"/docs/metadata-ingestion/source_docs/superset"},next:{title:"Trino",permalink:"/docs/metadata-ingestion/source_docs/trino"}},s=[{value:"Setup",id:"setup",children:[],level:2},{value:"Capabilities",id:"capabilities",children:[{value:"Workbook",id:"workbook",children:[],level:3},{value:"Dashboard",id:"dashboard",children:[],level:3},{value:"Sheet",id:"sheet",children:[],level:3},{value:"Embedded Data Source",id:"embedded-data-source",children:[],level:3},{value:"Published Data Source",id:"published-data-source",children:[],level:3},{value:"Custom SQL Data Source",id:"custom-sql-data-source",children:[],level:3}],level:2},{value:"Quickstart recipe",id:"quickstart-recipe",children:[],level:2},{value:"Config details",id:"config-details",children:[{value:"Authentication",id:"authentication",children:[],level:3}],level:2},{value:"Compatibility",id:"compatibility",children:[],level:2},{value:"Questions",id:"questions",children:[],level:2}],p={toc:s};function m(e){var n=e.components,t=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"tableau"},"Tableau"),(0,l.kt)("p",null,"For context on getting started with ingestion, check out our ",(0,l.kt)("a",{parentName:"p",href:"/docs/metadata-ingestion"},"metadata ingestion guide"),"."),(0,l.kt)("p",null,"Note that this connector is currently considered in ",(0,l.kt)("inlineCode",{parentName:"p"},"BETA"),", and has not been validated for production use. "),(0,l.kt)("h2",{id:"setup"},"Setup"),(0,l.kt)("p",null,"To install this plugin, run ",(0,l.kt)("inlineCode",{parentName:"p"},"pip install 'acryl-datahub[tableau]'"),"."),(0,l.kt)("p",null,"See documentation for Tableau's metadata API at ",(0,l.kt)("a",{parentName:"p",href:"https://help.tableau.com/current/api/metadata_api/en-us/index.html"},"https://help.tableau.com/current/api/metadata_api/en-us/index.html")),(0,l.kt)("h2",{id:"capabilities"},"Capabilities"),(0,l.kt)("p",null,"This plugin extracts Sheets, Dashboards, Embedded and Published Data sources metadata within Workbooks in a given project\non a Tableau Online site. This plugin is in beta and has only been tested on PostgreSQL database and sample workbooks\non Tableau online."),(0,l.kt)("p",null,"Tableau's GraphQL interface is used to extract metadata information. Queries used to extract metadata are located\nin ",(0,l.kt)("inlineCode",{parentName:"p"},"metadata-ingestion/src/datahub/ingestion/source/tableau_common.py")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#Workbook"},"Workbook")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#Dashboard"},"Dashboard")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#Sheet"},"Sheet")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#Embedded-Data-Source"},"Embedded Data source")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#Published-Data-Source"},"Published Data source")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#Custom-SQL-Data-Source"},"Custom SQL Data source"))),(0,l.kt)("h3",{id:"workbook"},"Workbook"),(0,l.kt)("p",null,"Workbooks from Tableau are ingested as Container in datahub. ",(0,l.kt)("br",null)),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GraphQL query ",(0,l.kt)("br",null))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  workbooksConnection(first: 15, offset: 0, filter: {projectNameWithin: ["default", "Project 2"]}) {\n    nodes {\n      id\n      name\n      luid\n      uri\n      projectName\n      owner {\n        username\n      }\n      description\n      uri\n      createdAt\n      updatedAt\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    totalCount\n  }\n}\n')),(0,l.kt)("h3",{id:"dashboard"},"Dashboard"),(0,l.kt)("p",null,"Dashboards from Tableau are ingested as Dashboard in datahub. ",(0,l.kt)("br",null)),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GraphQL query ",(0,l.kt)("br",null))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  workbooksConnection(first: 15, offset: 0, filter: {projectNameWithin: ["default", "Project 2"]}) {\n    nodes {\n      .....\n      dashboards {\n        id\n        name\n        path\n        createdAt\n        updatedAt\n        sheets {\n          id\n          name\n        }\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    totalCount\n  }\n}\n\n')),(0,l.kt)("h3",{id:"sheet"},"Sheet"),(0,l.kt)("p",null,"Sheets from Tableau are ingested as charts in datahub. ",(0,l.kt)("br",null)),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GraphQL query ",(0,l.kt)("br",null))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  workbooksConnection(first: 10, offset: 0, filter: {projectNameWithin: ["default"]}) {\n    .....\n      sheets {\n        id\n        name\n        path\n        createdAt\n        updatedAt\n        tags {\n          name\n        }\n        containedInDashboards {\n          name\n          path\n        }\n        upstreamDatasources {\n          id\n          name\n        }\n        datasourceFields {\n          __typename\n          id\n          name\n          description\n          upstreamColumns {\n            name\n          }\n          ... on ColumnField {\n            dataCategory\n            role\n            dataType\n            aggregation\n          }\n          ... on CalculatedField {\n            role\n            dataType\n            aggregation\n            formula\n          }\n          ... on GroupField {\n            role\n            dataType\n          }\n          ... on DatasourceField {\n            remoteField {\n              __typename\n              id\n              name\n              description\n              folderName\n              ... on ColumnField {\n                dataCategory\n                role\n                dataType\n                aggregation\n              }\n              ... on CalculatedField {\n                role\n                dataType\n                aggregation\n                formula\n              }\n              ... on GroupField {\n                role\n                dataType\n              }\n            }\n          }\n        }\n      }\n    }\n     .....\n  }\n}\n')),(0,l.kt)("h3",{id:"embedded-data-source"},"Embedded Data Source"),(0,l.kt)("p",null,"Embedded Data source from Tableau is ingested as a Dataset in datahub."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GraphQL query ",(0,l.kt)("br",null))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  workbooksConnection(first: 15, offset: 0, filter: {projectNameWithin: ["default"]}) {\n    nodes {\n      ....\n      embeddedDatasources {\n        __typename\n        id\n        name\n        hasExtracts\n        extractLastRefreshTime\n        extractLastIncrementalUpdateTime\n        extractLastUpdateTime\n        upstreamDatabases {\n          id\n          name\n          connectionType\n          isEmbedded\n        }\n        upstreamTables {\n          name\n          schema\n          columns {\n            name\n            remoteType\n          }\n        }\n        fields {\n          __typename\n          id\n          name\n          description\n          isHidden\n          folderName\n          ... on ColumnField {\n            dataCategory\n            role\n            dataType\n            defaultFormat\n            aggregation\n            columns {\n              table {\n                ... on CustomSQLTable {\n                  id\n                  name\n                }\n              }\n            }\n          }\n          ... on CalculatedField {\n            role\n            dataType\n            defaultFormat\n            aggregation\n            formula\n          }\n          ... on GroupField {\n            role\n            dataType\n          }\n        }\n        upstreamDatasources {\n          name\n        }\n        workbook {\n          name\n          projectName\n        }\n      }\n    }\n    ....\n  }\n}\n')),(0,l.kt)("h3",{id:"published-data-source"},"Published Data Source"),(0,l.kt)("p",null,"Published Data source from Tableau is ingested as a Dataset in datahub."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GraphQL query ",(0,l.kt)("br",null))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  publishedDatasourcesConnection(filter: {idWithin: ["00cce29f-b561-bb41-3557-8e19660bb5dd", "618c87db-5959-338b-bcc7-6f5f4cc0b6c6"]}) {\n    nodes {\n      __typename\n      id\n      name\n      hasExtracts\n      extractLastRefreshTime\n      extractLastIncrementalUpdateTime\n      extractLastUpdateTime\n      downstreamSheets {\n        id\n        name\n      }\n      upstreamTables {\n        name\n        schema\n        fullName\n        connectionType\n        description\n        contact {\n          name\n        }\n      }\n      fields {\n        __typename\n        id\n        name\n        description\n        isHidden\n        folderName\n        ... on ColumnField {\n          dataCategory\n          role\n          dataType\n          defaultFormat\n          aggregation\n          columns {\n            table {\n              ... on CustomSQLTable {\n                id\n                name\n              }\n            }\n          }\n        }\n        ... on CalculatedField {\n          role\n          dataType\n          defaultFormat\n          aggregation\n          formula\n        }\n        ... on GroupField {\n          role\n          dataType\n        }\n      }\n      owner {\n        username\n      }\n      description\n      uri\n      projectName\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    totalCount\n  }\n}\n')),(0,l.kt)("h3",{id:"custom-sql-data-source"},"Custom SQL Data Source"),(0,l.kt)("p",null,"For custom sql data sources, the query is viewable in UI under View Definition tab. ",(0,l.kt)("br",null)),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GraphQL query ",(0,l.kt)("br",null))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  customSQLTablesConnection(filter: {idWithin: ["22b0b4c3-6b85-713d-a161-5a87fdd78f40"]}) {\n    nodes {\n      id\n      name\n      query\n      columns {\n        id\n        name\n        remoteType\n        description\n        referencedByFields {\n          datasource {\n            id\n            name\n            upstreamDatabases {\n              id\n              name\n            }\n            upstreamTables {\n              id\n              name\n              schema\n              connectionType\n              columns {\n                id\n              }\n            }\n            ... on PublishedDatasource {\n              projectName\n            }\n            ... on EmbeddedDatasource {\n              workbook {\n                name\n                projectName\n              }\n            }\n          }\n        }\n      }\n      tables {\n        id\n        name\n        schema\n        connectionType\n      }\n    }\n  }\n}\n')),(0,l.kt)("h2",{id:"quickstart-recipe"},"Quickstart recipe"),(0,l.kt)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,l.kt)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,l.kt)("p",null,"For general pointers on writing and running a recipe, see our ",(0,l.kt)("a",{parentName:"p",href:"/docs/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},'source:\n  type: tableau\n  config:\n    # Coordinates\n    connect_uri: https://prod-ca-a.online.tableau.com\n    site: acryl\n    projects: ["default", "Project 2"]\n    \n    # Credentials\n    username: username@acrylio.com\n    password: pass\n\n    # Options\n    ingest_tags: True\n    ingest_owner: True\n    default_schema_map:\n      mydatabase: public\n      anotherdatabase: anotherschema\n    \nsink:\n  # sink configs\n')),(0,l.kt)("h2",{id:"config-details"},"Config details"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"connect_uri")),(0,l.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Tableau host URL.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"site")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'""')),(0,l.kt)("td",{parentName:"tr",align:null},'Tableau Site. Always required for Tableau Online. Use emptystring "" to connect with Default site on Tableau Server.')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"env")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"PROD"')),(0,l.kt)("td",{parentName:"tr",align:null},"Environment to use in namespace when constructing URNs.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"username")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Tableau username, must be set if authenticating using username/password.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"password")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Tableau password, must be set if authenticating using username/password.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"token_name")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Tableau token name, must be set if authenticating using a personal access token.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"token_value")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Tableau token value, must be set if authenticating using a personal access token.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"projects")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"default")),(0,l.kt)("td",{parentName:"tr",align:null},"List of projects")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"workbooks_page_size")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of workbooks to query at a time using Tableau api.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"default_schema_map"),"*"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Default schema to use when schema is not found.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ingest_tags")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"False")),(0,l.kt)("td",{parentName:"tr",align:null},"Ingest Tags from source. This will override Tags entered from UI")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ingest_owners")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"False")),(0,l.kt)("td",{parentName:"tr",align:null},"Ingest Owner from source. This will override Owner info entered from UI")))),(0,l.kt)("p",null,"*Tableau may not provide schema name when ingesting Custom SQL data source. Use ",(0,l.kt)("inlineCode",{parentName:"p"},"default_schema_map")," to provide a default\nschema name to use when constructing a table URN."),(0,l.kt)("h3",{id:"authentication"},"Authentication"),(0,l.kt)("p",null,"Currently, authentication is supported on Tableau using username and password\nand personal token. For more information on Tableau authentication, refer to ",(0,l.kt)("a",{parentName:"p",href:"https://help.tableau.com/current/api/metadata_api/en-us/docs/meta_api_auth.html"},"How to Authenticate")," guide."),(0,l.kt)("h2",{id:"compatibility"},"Compatibility"),(0,l.kt)("p",null,"Tableau Server Version: 2021.4.0 (20214.22.0114.0959) 64-bit Linux "),(0,l.kt)("h2",{id:"questions"},"Questions"),(0,l.kt)("p",null,"If you've got any questions on configuring this source, feel free to ping us on\n",(0,l.kt)("a",{parentName:"p",href:"https://slack.datahubproject.io/"},"our Slack"),"!"))}m.isMDXComponent=!0}}]);