(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[611],{4137:function(t,e,n){"use strict";n.d(e,{Zo:function(){return p},kt:function(){return c}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),d=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=d(t.components);return a.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,s=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),m=d(n),c=r,k=m["".concat(s,".").concat(c)]||m[c]||u[c]||o;return n?a.createElement(k,i(i({ref:e},p),{},{components:n})):a.createElement(k,i({ref:e},p))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7806:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return m}});var a=n(2122),r=n(9756),o=(n(7294),n(4137)),i=["components"],l={title:"LookML",sidebar_label:"LookML",slug:"/metadata-ingestion/source_docs/lookml",custom_edit_url:"https://github.com/linkedin/datahub/blob/master/metadata-ingestion/source_docs/lookml.md"},s="LookML",d={unversionedId:"metadata-ingestion/source_docs/lookml",id:"metadata-ingestion/source_docs/lookml",isDocsHomePage:!1,title:"LookML",description:"For context on getting started with ingestion, check out our metadata ingestion guide.",source:"@site/genDocs/metadata-ingestion/source_docs/lookml.md",sourceDirName:"metadata-ingestion/source_docs",slug:"/metadata-ingestion/source_docs/lookml",permalink:"/docs/metadata-ingestion/source_docs/lookml",editUrl:"https://github.com/linkedin/datahub/blob/master/metadata-ingestion/source_docs/lookml.md",version:"current",frontMatter:{title:"LookML",sidebar_label:"LookML",slug:"/metadata-ingestion/source_docs/lookml",custom_edit_url:"https://github.com/linkedin/datahub/blob/master/metadata-ingestion/source_docs/lookml.md"},sidebar:"overviewSidebar",previous:{title:"Looker dashboards",permalink:"/docs/metadata-ingestion/source_docs/looker"},next:{title:"MongoDB",permalink:"/docs/metadata-ingestion/source_docs/mongodb"}},p=[{value:"Setup",id:"setup",children:[]},{value:"Capabilities",id:"capabilities",children:[]},{value:"Quickstart recipe",id:"quickstart-recipe",children:[]},{value:"Config details",id:"config-details",children:[]},{value:"Compatibility",id:"compatibility",children:[]},{value:"Questions",id:"questions",children:[]}],u={toc:p};function m(t){var e=t.components,n=(0,r.Z)(t,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"lookml"},"LookML"),(0,o.kt)("p",null,"For context on getting started with ingestion, check out our ",(0,o.kt)("a",{parentName:"p",href:"/docs/metadata-ingestion"},"metadata ingestion guide"),"."),(0,o.kt)("h2",{id:"setup"},"Setup"),(0,o.kt)("p",null,"To install this plugin, run ",(0,o.kt)("inlineCode",{parentName:"p"},"pip install 'acryl-datahub[lookml]'"),"."),(0,o.kt)("p",null,"Note! This plugin uses a package that requires Python 3.7+!"),(0,o.kt)("h2",{id:"capabilities"},"Capabilities"),(0,o.kt)("p",null,"This plugin extracts the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"LookML views from model files"),(0,o.kt)("li",{parentName:"ul"},"Name, upstream table names, dimensions, measures, and dimension groups")),(0,o.kt)("h2",{id:"quickstart-recipe"},"Quickstart recipe"),(0,o.kt)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,o.kt)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,o.kt)("p",null,"For general pointers on writing and running a recipe, see our ",(0,o.kt)("a",{parentName:"p",href:"/docs/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},'source:\n  type: "lookml"\n  config:\n    # Coordinates\n    base_folder: /path/to/model/files\n\n    # Options\n    connection_to_platform_map:\n      connection_name: platform_name (or platform_name.database_name) # for ex. my_snowflake_conn: snowflake.my_database\n\nsink:\n  # sink configs\n')),(0,o.kt)("h2",{id:"config-details"},"Config details"),(0,o.kt)("p",null,"Note that a ",(0,o.kt)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Field"),(0,o.kt)("th",{parentName:"tr",align:null},"Required"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"base_folder")),(0,o.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Where the ",(0,o.kt)("inlineCode",{parentName:"td"},"*.model.lkml")," and ",(0,o.kt)("inlineCode",{parentName:"td"},"*.view.lkml")," files are stored.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"connection_to_platform_map.<connection_name>")),(0,o.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Mappings between connection names in the model files to platform names.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"platform_name")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},'"looker"')),(0,o.kt)("td",{parentName:"tr",align:null},"Platform to use in namespace when constructing URNs.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"model_pattern.allow")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Regex pattern for models to include in ingestion.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"model_pattern.deny")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Regex pattern for models to exclude from ingestion.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"view_pattern.allow")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Regex pattern for views to include in ingestion.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"view_pattern.deny")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Regex pattern for views to exclude from ingestion.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},'"PROD"')),(0,o.kt)("td",{parentName:"tr",align:null},"Environment to use in namespace when constructing URNs.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"parse_table_names_from_sql")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"False")),(0,o.kt)("td",{parentName:"tr",align:null},"See note below.")))),(0,o.kt)("p",null,"Note! The integration can use ",(0,o.kt)("a",{parentName:"p",href:"https://pypi.org/project/sql-metadata/"},(0,o.kt)("inlineCode",{parentName:"a"},"sql-metadata"))," to try to parse the tables the\nviews depends on. As these SQL's can be complicated, and the package doesn't official support all the SQL dialects that\nLooker supports, the result might not be correct. This parsing is disabled by default, but can be enabled by setting\n",(0,o.kt)("inlineCode",{parentName:"p"},"parse_table_names_from_sql: True"),"."),(0,o.kt)("h2",{id:"compatibility"},"Compatibility"),(0,o.kt)("p",null,"Coming soon!"),(0,o.kt)("h2",{id:"questions"},"Questions"),(0,o.kt)("p",null,"If you've got any questions on configuring this source, feel free to ping us on ",(0,o.kt)("a",{parentName:"p",href:"https://slack.datahubproject.io/"},"our Slack"),"!"))}m.isMDXComponent=!0}}]);