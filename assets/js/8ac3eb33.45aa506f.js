(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[3181],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return l},kt:function(){return h}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var i=a.createContext({}),c=function(t){var e=a.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},l=function(t){var e=c(t.components);return a.createElement(i.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,i=t.parentName,l=p(t,["components","mdxType","originalType","parentName"]),d=c(n),h=r,m=d["".concat(i,".").concat(h)]||d[h]||u[h]||o;return n?a.createElement(m,s(s({ref:e},l),{},{components:n})):a.createElement(m,s({ref:e},l))}));function h(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,s=new Array(o);s[0]=d;var p={};for(var i in e)hasOwnProperty.call(e,i)&&(p[i]=e[i]);p.originalType=t,p.mdxType="string"==typeof t?t:r,s[1]=p;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},527:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return s},metadata:function(){return p},toc:function(){return i},default:function(){return l}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),s={title:"What is a snapshot?",sidebar_label:"What is a snapshot?",slug:"/what/snapshot",custom_edit_url:"https://github.com/linkedin/datahub/blob/master/docs/what/snapshot.md"},p={unversionedId:"docs/what/snapshot",id:"docs/what/snapshot",isDocsHomePage:!1,title:"What is a snapshot?",description:"A metadata snapshot models the current state of one or multiple metadata aspects associated with a particular entity.",source:"@site/genDocs/docs/what/snapshot.md",sourceDirName:"docs/what",slug:"/what/snapshot",permalink:"/docs/what/snapshot",editUrl:"https://github.com/linkedin/datahub/blob/master/docs/what/snapshot.md",version:"current",sidebar_label:"What is a snapshot?",frontMatter:{title:"What is a snapshot?",sidebar_label:"What is a snapshot?",slug:"/what/snapshot",custom_edit_url:"https://github.com/linkedin/datahub/blob/master/docs/what/snapshot.md"},sidebar:"overviewSidebar",previous:{title:"What is a search document?",permalink:"/docs/what/search-document"},next:{title:"What is a metadata delta?",permalink:"/docs/what/delta"}},i=[],c={toc:i};function l(t){var e=t.components,n=(0,r.Z)(t,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A metadata snapshot models the current state of one or multiple metadata ",(0,o.kt)("a",{parentName:"p",href:"/docs/what/aspect"},"aspects")," associated with a particular ",(0,o.kt)("a",{parentName:"p",href:"/docs/what/entity"},"entity"),".\nEach entity type is expected to have:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"An entity-specific aspect (e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"CorpGroupAspect")," from below), which is a ",(0,o.kt)("inlineCode",{parentName:"li"},"typeref")," containing a union of all possible metadata aspects for the entity."),(0,o.kt)("li",{parentName:"ol"},"An entity-specific snapshot (e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"CorpGroupSnapshot")," from below), which contains an array (aspects) of entity-specific aspects.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"namespace com.linkedin.metadata.aspect\n\nimport com.linkedin.group.Membership\nimport com.linkedin.group.SomeOtherMetadata\n\n/**\n * A union of all supported metadata aspects for a group\n */\ntyperef CorpGroupAspect = union[Membership, SomeOtherMetadata]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"namespace com.linkedin.metadata.snapshot\n\nimport com.linkedin.common.CorpGroupUrn\nimport com.linkedin.metadata.aspect.CorpGroupAspect\n\n/**\n * A metadata snapshot for a specific Group entity.\n */\nrecord CorpGroupSnapshot {\n\n  /** URN for the entity the metadata snapshot is associated with */\n  urn: CorpGroupUrn\n\n  /** The list of metadata aspects associated with the group */\n  aspects: array[CorpGroupAspect]\n}\n")),(0,o.kt)("p",null,"The generic ",(0,o.kt)("inlineCode",{parentName:"p"},"Snapshot")," typeref contains a union of all entity-specific snapshots and can therefore be used to represent the state of any metadata aspect for all supported entity types."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"namespace com.linkedin.metadata.snapshot\n\n/**\n * A union of all supported metadata snapshot types.\n */\ntyperef Snapshot = union[DatasetSnapshot, CorpGroupSnapshot, CorpUserSnapshot]\n")))}l.isMDXComponent=!0}}]);