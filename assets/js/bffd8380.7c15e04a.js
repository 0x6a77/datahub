(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[3979],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return k}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=s(n),k=a,d=f["".concat(i,".").concat(k)]||f[k]||l[k]||o;return n?r.createElement(d,u(u({ref:t},p),{},{components:n})):r.createElement(d,u({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,u=new Array(o);u[0]=f;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,u[1]=c;for(var s=2;s<o;s++)u[s]=n[s];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1454:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return u},metadata:function(){return c},toc:function(){return i},default:function(){return p}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),u={title:"Kafka, Zookeeper and Schema Registry",hide_title:!0,slug:"/docker/kafka-setup",custom_edit_url:"https://github.com/linkedin/datahub/blob/master/docker/kafka-setup/README.md"},c={unversionedId:"docker/kafka-setup/README",id:"docker/kafka-setup/README",isDocsHomePage:!1,title:"Kafka, Zookeeper and Schema Registry",description:"DataHub uses Kafka as the pub-sub message queue in the backend.",source:"@site/genDocs/docker/kafka-setup/README.md",sourceDirName:"docker/kafka-setup",slug:"/docker/kafka-setup",permalink:"/docs/docker/kafka-setup",editUrl:"https://github.com/linkedin/datahub/blob/master/docker/kafka-setup/README.md",version:"current",frontMatter:{title:"Kafka, Zookeeper and Schema Registry",hide_title:!0,slug:"/docker/kafka-setup",custom_edit_url:"https://github.com/linkedin/datahub/blob/master/docker/kafka-setup/README.md"}},i=[{value:"Debugging Kafka",id:"debugging-kafka",children:[]}],s={toc:i};function p(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"DataHub uses Kafka as the pub-sub message queue in the backend.\n",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/u/confluentinc"},"Official Confluent Kafka Docker images")," found in Docker Hub is used without\nany modification."),(0,o.kt)("h2",{id:"debugging-kafka"},"Debugging Kafka"),(0,o.kt)("p",null,"You can install ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/edenhill/kafkacat"},"kafkacat")," to consume and produce messaged to Kafka topics.\nFor example, to consume messages on MetadataAuditEvent topic, you can run below command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"kafkacat -b localhost:9092 -t MetadataAuditEvent\n")),(0,o.kt)("p",null,"However, ",(0,o.kt)("inlineCode",{parentName:"p"},"kafkacat")," currently doesn't support Avro deserialization at this point,\nbut they have an ongoing ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/edenhill/kafkacat/pull/151"},"work")," for that."))}p.isMDXComponent=!0}}]);