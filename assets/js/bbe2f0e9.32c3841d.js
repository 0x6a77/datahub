"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[6118],{4137:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(a),c=r,b=u["".concat(s,".").concat(c)]||u[c]||m[c]||i;return a?n.createElement(b,l(l({ref:t},p),{},{components:a})):n.createElement(b,l({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6870:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return u}});var n=a(7462),r=a(3366),i=(a(7294),a(4137)),l=["components"],o={title:"Metabase",sidebar_label:"Metabase",slug:"/metadata-ingestion/source_docs/metabase",custom_edit_url:"https://github.com/linkedin/datahub/blob/master/metadata-ingestion/source_docs/metabase.md"},s="Metabase",d={unversionedId:"metadata-ingestion/source_docs/metabase",id:"metadata-ingestion/source_docs/metabase",isDocsHomePage:!1,title:"Metabase",description:"For context on getting started with ingestion, check out our metadata ingestion guide.",source:"@site/genDocs/metadata-ingestion/source_docs/metabase.md",sourceDirName:"metadata-ingestion/source_docs",slug:"/metadata-ingestion/source_docs/metabase",permalink:"/docs/metadata-ingestion/source_docs/metabase",editUrl:"https://github.com/linkedin/datahub/blob/master/metadata-ingestion/source_docs/metabase.md",tags:[],version:"current",frontMatter:{title:"Metabase",sidebar_label:"Metabase",slug:"/metadata-ingestion/source_docs/metabase",custom_edit_url:"https://github.com/linkedin/datahub/blob/master/metadata-ingestion/source_docs/metabase.md"},sidebar:"overviewSidebar",previous:{title:"MariaDB",permalink:"/docs/metadata-ingestion/source_docs/mariadb"},next:{title:"Mode",permalink:"/docs/metadata-ingestion/source_docs/mode"}},p=[{value:"Setup",id:"setup",children:[],level:2},{value:"Capabilities",id:"capabilities",children:[{value:"Dashboard",id:"dashboard",children:[],level:3},{value:"Chart",id:"chart",children:[],level:3}],level:2},{value:"Quickstart recipe",id:"quickstart-recipe",children:[],level:2},{value:"Config details",id:"config-details",children:[],level:2},{value:"Compatibility",id:"compatibility",children:[],level:2},{value:"Questions",id:"questions",children:[],level:2}],m={toc:p};function u(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"metabase"},"Metabase"),(0,i.kt)("p",null,"For context on getting started with ingestion, check out our ",(0,i.kt)("a",{parentName:"p",href:"/docs/metadata-ingestion"},"metadata ingestion guide"),"."),(0,i.kt)("h2",{id:"setup"},"Setup"),(0,i.kt)("p",null,"To install this plugin, run ",(0,i.kt)("inlineCode",{parentName:"p"},"pip install 'acryl-datahub[metabase]'"),"."),(0,i.kt)("p",null,"See documentation for Metabase's API at ",(0,i.kt)("a",{parentName:"p",href:"https://www.metabase.com/learn/administration/metabase-api.html"},"https://www.metabase.com/learn/administration/metabase-api.html"),"\nfor more details on Metabase's login api."),(0,i.kt)("h2",{id:"capabilities"},"Capabilities"),(0,i.kt)("p",null,"This plugin extracts Charts, dashboards, and associated metadata. This plugin is in beta and has only been tested\non PostgreSQL and H2 database."),(0,i.kt)("h3",{id:"dashboard"},"Dashboard"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.metabase.com/docs/latest/api-documentation.html#dashboard"},"/api/dashboard")," endpoint is used to\nretrieve the following dashboard information."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Title and description"),(0,i.kt)("li",{parentName:"ul"},"Last edited by"),(0,i.kt)("li",{parentName:"ul"},"Owner"),(0,i.kt)("li",{parentName:"ul"},"Link to the dashboard in Metabase"),(0,i.kt)("li",{parentName:"ul"},"Associated charts")),(0,i.kt)("h3",{id:"chart"},"Chart"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.metabase.com/docs/latest/api-documentation.html#card"},"/api/card")," endpoint is used to\nretrieve the following information."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Title and description"),(0,i.kt)("li",{parentName:"ul"},"Last edited by"),(0,i.kt)("li",{parentName:"ul"},"Owner"),(0,i.kt)("li",{parentName:"ul"},"Link to the chart in Metabase"),(0,i.kt)("li",{parentName:"ul"},"Datasource and lineage")),(0,i.kt)("p",null,"The following properties for a chart are ingested in DataHub."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Dimensions")),(0,i.kt)("td",{parentName:"tr",align:null},"Column names")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Filters")),(0,i.kt)("td",{parentName:"tr",align:null},"Any filters applied to the chart")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Metrics")),(0,i.kt)("td",{parentName:"tr",align:null},"All columns that are being used for aggregation")))),(0,i.kt)("h2",{id:"quickstart-recipe"},"Quickstart recipe"),(0,i.kt)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,i.kt)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,i.kt)("p",null,"For general pointers on writing and running a recipe, see our ",(0,i.kt)("a",{parentName:"p",href:"/docs/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"source:\n  type: metabase\n  config:\n    # Coordinates\n    connect_uri: http://localhost:3000\n\n    # Credentials\n    username: user\n    password: pass\n    \n    # Options\n    default_schema: public\n    database_alias_map:\n      h2: sample-dataset.db\n\nsink:\n  # sink configs\n")),(0,i.kt)("h2",{id:"config-details"},"Config details"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Field"),(0,i.kt)("th",{parentName:"tr",align:null},"Required"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"connect_uri")),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"localhost:8088"')),(0,i.kt)("td",{parentName:"tr",align:null},"Metabase host URL.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"username")),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Metabase username.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"password")),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Metabase password.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"database_alias_map")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Database name map to use when constructing dataset URN.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"engine_platform_map")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Custom mappings between metabase database engines and DataHub platforms")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"default_schema")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"public")),(0,i.kt)("td",{parentName:"tr",align:null},"Default schema name to use when schema is not provided in an SQL query")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"env")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"PROD"')),(0,i.kt)("td",{parentName:"tr",align:null},"Environment to use in namespace when constructing URNs.")))),(0,i.kt)("p",null,"Metabase databases will be mapped to a DataHub platform based on the engine listed in the\n",(0,i.kt)("a",{parentName:"p",href:"https://www.metabase.com/docs/latest/api-documentation.html#database"},"api/database")," response. This mapping can be\ncustomized by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"engine_platform_map")," config option. For example, to map databases using the ",(0,i.kt)("inlineCode",{parentName:"p"},"athena")," engine to\nthe underlying datasets in the ",(0,i.kt)("inlineCode",{parentName:"p"},"glue")," platform, the following snippet can be used:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"  engine_platform_map:\n    athena: glue\n")),(0,i.kt)("p",null,"DataHub will try to determine database name from Metabase ",(0,i.kt)("a",{parentName:"p",href:"https://www.metabase.com/docs/latest/api-documentation.html#database"},"api/database"),"\npayload. However, the name can be overridden from ",(0,i.kt)("inlineCode",{parentName:"p"},"database_alias_map")," for a given database connected to Metabase."),(0,i.kt)("h2",{id:"compatibility"},"Compatibility"),(0,i.kt)("p",null,"Metabase version ",(0,i.kt)("a",{parentName:"p",href:"https://www.metabase.com/start/oss/"},"v0.41.2")),(0,i.kt)("h2",{id:"questions"},"Questions"),(0,i.kt)("p",null,"If you've got any questions on configuring this source, feel free to ping us on\n",(0,i.kt)("a",{parentName:"p",href:"https://slack.datahubproject.io/"},"our Slack"),"!"))}u.isMDXComponent=!0}}]);