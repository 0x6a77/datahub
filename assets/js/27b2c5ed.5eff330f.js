(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[6806],{4137:function(t,l,e){"use strict";e.d(l,{Zo:function(){return k},kt:function(){return c}});var n=e(7294);function a(t,l,e){return l in t?Object.defineProperty(t,l,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[l]=e,t}function r(t,l){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);l&&(n=n.filter((function(l){return Object.getOwnPropertyDescriptor(t,l).enumerable}))),e.push.apply(e,n)}return e}function u(t){for(var l=1;l<arguments.length;l++){var e=null!=arguments[l]?arguments[l]:{};l%2?r(Object(e),!0).forEach((function(l){a(t,l,e[l])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(l){Object.defineProperty(t,l,Object.getOwnPropertyDescriptor(e,l))}))}return t}function o(t,l){if(null==t)return{};var e,n,a=function(t,l){if(null==t)return{};var e,n,a={},r=Object.keys(t);for(n=0;n<r.length;n++)e=r[n],l.indexOf(e)>=0||(a[e]=t[e]);return a}(t,l);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)e=r[n],l.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(a[e]=t[e])}return a}var d=n.createContext({}),i=function(t){var l=n.useContext(d),e=l;return t&&(e="function"==typeof t?t(l):u(u({},l),t)),e},k=function(t){var l=i(t.components);return n.createElement(d.Provider,{value:l},t.children)},s={inlineCode:"code",wrapper:function(t){var l=t.children;return n.createElement(n.Fragment,{},l)}},p=n.forwardRef((function(t,l){var e=t.components,a=t.mdxType,r=t.originalType,d=t.parentName,k=o(t,["components","mdxType","originalType","parentName"]),p=i(e),c=a,h=p["".concat(d,".").concat(c)]||p[c]||s[c]||r;return e?n.createElement(h,u(u({ref:l},k),{},{components:e})):n.createElement(h,u({ref:l},k))}));function c(t,l){var e=arguments,a=l&&l.mdxType;if("string"==typeof t||a){var r=e.length,u=new Array(r);u[0]=p;var o={};for(var d in l)hasOwnProperty.call(l,d)&&(o[d]=l[d]);o.originalType=t,o.mdxType="string"==typeof t?t:a,u[1]=o;for(var i=2;i<r;i++)u[i]=e[i];return n.createElement.apply(null,u)}return n.createElement.apply(null,e)}p.displayName="MDXCreateElement"},5735:function(t,l,e){"use strict";e.r(l),e.d(l,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return i},toc:function(){return k},default:function(){return p}});var n=e(2122),a=e(9756),r=(e(7294),e(4137)),u=["components"],o={id:"inputObjects",title:"Input objects",slug:"inputObjects",sidebar_position:7},d=void 0,i={unversionedId:"graphql/inputObjects",id:"graphql/inputObjects",isDocsHomePage:!1,title:"Input objects",description:"ActorFilterInput",source:"@site/genDocs/graphql/inputObjects.md",sourceDirName:"graphql",slug:"/graphql/inputObjects",permalink:"/docs/graphql/inputObjects",editUrl:"https://github.com/linkedin/datahub/blob/master/genDocs/graphql/inputObjects.md",version:"current",sidebarPosition:7,frontMatter:{id:"inputObjects",title:"Input objects",slug:"inputObjects",sidebar_position:7},sidebar:"overviewSidebar",previous:{title:"Objects",permalink:"/docs/graphql/objects"},next:{title:"Interfaces",permalink:"/docs/graphql/interfaces"}},k=[{value:"ActorFilterInput",id:"actorfilterinput",children:[]},{value:"AutoCompleteInput",id:"autocompleteinput",children:[]},{value:"AutoCompleteMultipleInput",id:"autocompletemultipleinput",children:[]},{value:"BrowseInput",id:"browseinput",children:[]},{value:"BrowsePathsInput",id:"browsepathsinput",children:[]},{value:"ChartEditablePropertiesUpdate",id:"charteditablepropertiesupdate",children:[]},{value:"ChartUpdateInput",id:"chartupdateinput",children:[]},{value:"DashboardEditablePropertiesUpdate",id:"dashboardeditablepropertiesupdate",children:[]},{value:"DashboardUpdateInput",id:"dashboardupdateinput",children:[]},{value:"DataFlowEditablePropertiesUpdate",id:"datafloweditablepropertiesupdate",children:[]},{value:"DataFlowUpdateInput",id:"dataflowupdateinput",children:[]},{value:"DataJobEditablePropertiesUpdate",id:"datajobeditablepropertiesupdate",children:[]},{value:"DataJobUpdateInput",id:"datajobupdateinput",children:[]},{value:"DatasetDeprecationUpdate",id:"datasetdeprecationupdate",children:[]},{value:"DatasetEditablePropertiesUpdate",id:"dataseteditablepropertiesupdate",children:[]},{value:"DatasetUpdateInput",id:"datasetupdateinput",children:[]},{value:"DescriptionUpdateInput",id:"descriptionupdateinput",children:[]},{value:"EditableSchemaFieldInfoUpdate",id:"editableschemafieldinfoupdate",children:[]},{value:"EditableSchemaMetadataUpdate",id:"editableschemametadataupdate",children:[]},{value:"FacetFilterInput",id:"facetfilterinput",children:[]},{value:"GlobalTagsUpdate",id:"globaltagsupdate",children:[]},{value:"InstitutionalMemoryMetadataUpdate",id:"institutionalmemorymetadataupdate",children:[]},{value:"InstitutionalMemoryUpdate",id:"institutionalmemoryupdate",children:[]},{value:"ListPoliciesInput",id:"listpoliciesinput",children:[]},{value:"OwnershipUpdate",id:"ownershipupdate",children:[]},{value:"OwnerUpdate",id:"ownerupdate",children:[]},{value:"PolicyUpdateInput",id:"policyupdateinput",children:[]},{value:"RelationshipsInput",id:"relationshipsinput",children:[]},{value:"ResourceFilterInput",id:"resourcefilterinput",children:[]},{value:"SearchInput",id:"searchinput",children:[]},{value:"TagAssociationInput",id:"tagassociationinput",children:[]},{value:"TagAssociationUpdate",id:"tagassociationupdate",children:[]},{value:"TagUpdateInput",id:"tagupdateinput",children:[]},{value:"TermAssociationInput",id:"termassociationinput",children:[]}],s={toc:k};function p(t){var l=t.components,e=(0,a.Z)(t,u);return(0,r.kt)("wrapper",(0,n.Z)({},s,e,{components:l,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"actorfilterinput"},"ActorFilterInput"),(0,r.kt)("p",null,"Input required when creating or updating an Access Policies Determines which actors the Policy applies to"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"users",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A disjunctive set of users to apply the policy to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"groups",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A disjunctive set of groups to apply the policy to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceOwners",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether the filter should return TRUE for owners of a particular resource Only applies to policies of type METADATA, which have a resource associated with them"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"allUsers",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether the filter should apply to all users"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"allGroups",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether the filter should apply to all groups"))))),(0,r.kt)("h2",{id:"autocompleteinput"},"AutoCompleteInput"),(0,r.kt)("p",null,"Input for performing an auto completion query against a single Metadata Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"EntityType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Entity type to be autocompleted against"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The raw query string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"field",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional entity field name to autocomplete on"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"limit",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of autocomplete results to be returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Faceted filters applied to autocomplete results"))))),(0,r.kt)("h2",{id:"autocompletemultipleinput"},"AutoCompleteMultipleInput"),(0,r.kt)("p",null,"Input for performing an auto completion query against a a set of Metadata Entities"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"types",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"[EntityType!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Entity types to be autocompleted against Optional, if none supplied, all searchable types will be autocompleted against"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The raw query string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"field",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional field to autocomplete against"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"limit",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of autocomplete results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Faceted filters applied to autocomplete results"))))),(0,r.kt)("h2",{id:"browseinput"},"BrowseInput"),(0,r.kt)("p",null,"Input required for browse queries"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"EntityType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The browse entity type"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"path",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The browse path"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting point of paginated results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of elements included in the results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Faceted filters applied to browse results"))))),(0,r.kt)("h2",{id:"browsepathsinput"},"BrowsePathsInput"),(0,r.kt)("p",null,"Inputs for fetching the browse paths for a Metadata Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"EntityType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The browse entity type"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The entity urn"))))),(0,r.kt)("h2",{id:"charteditablepropertiesupdate"},"ChartEditablePropertiesUpdate"),(0,r.kt)("p",null,"Update to writable Chart fields"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Writable description aka documentation for a Chart"))))),(0,r.kt)("h2",{id:"chartupdateinput"},"ChartUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a Chart Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to ownership"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"globalTags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableProperties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#charteditablepropertiesupdate"},(0,r.kt)("code",null,"ChartEditablePropertiesUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable properties"))))),(0,r.kt)("h2",{id:"dashboardeditablepropertiesupdate"},"DashboardEditablePropertiesUpdate"),(0,r.kt)("p",null,"Update to writable Dashboard fields"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Writable description aka documentation for a Dashboard"))))),(0,r.kt)("h2",{id:"dashboardupdateinput"},"DashboardUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a Chart Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to ownership"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"globalTags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableProperties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#dashboardeditablepropertiesupdate"},(0,r.kt)("code",null,"DashboardEditablePropertiesUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable properties"))))),(0,r.kt)("h2",{id:"datafloweditablepropertiesupdate"},"DataFlowEditablePropertiesUpdate"),(0,r.kt)("p",null,"Update to writable Data Flow fields"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Writable description aka documentation for a Data Flow"))))),(0,r.kt)("h2",{id:"dataflowupdateinput"},"DataFlowUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a Data Flow aka Pipeline Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to ownership"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"globalTags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableProperties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#datafloweditablepropertiesupdate"},(0,r.kt)("code",null,"DataFlowEditablePropertiesUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable properties"))))),(0,r.kt)("h2",{id:"datajobeditablepropertiesupdate"},"DataJobEditablePropertiesUpdate"),(0,r.kt)("p",null,"Update to writable Data Job fields"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Writable description aka documentation for a Data Job"))))),(0,r.kt)("h2",{id:"datajobupdateinput"},"DataJobUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a Data Job aka Task Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to ownership"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"globalTags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableProperties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#datajobeditablepropertiesupdate"},(0,r.kt)("code",null,"DataJobEditablePropertiesUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable properties"))))),(0,r.kt)("h2",{id:"datasetdeprecationupdate"},"DatasetDeprecationUpdate"),(0,r.kt)("p",null,"An update for the deprecation information for a Metadata Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"deprecated",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether the dataset is deprecated"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"decommissionTime",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The time user plan to decommission this dataset"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"note",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Additional information about the dataset deprecation plan"))))),(0,r.kt)("h2",{id:"dataseteditablepropertiesupdate"},"DatasetEditablePropertiesUpdate"),(0,r.kt)("p",null,"Update to writable Dataset fields"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Writable description aka documentation for a Dataset"))))),(0,r.kt)("h2",{id:"datasetupdateinput"},"DatasetUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a Dataset Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to ownership"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"deprecation",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#datasetdeprecationupdate"},(0,r.kt)("code",null,"DatasetDeprecationUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to deprecation status"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"institutionalMemory",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#institutionalmemoryupdate"},(0,r.kt)("code",null,"InstitutionalMemoryUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to institutional memory, ie documentation"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"globalTags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableSchemaMetadata",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#editableschemametadataupdate"},(0,r.kt)("code",null,"EditableSchemaMetadataUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable schema metadata of the dataset"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableProperties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#dataseteditablepropertiesupdate"},(0,r.kt)("code",null,"DatasetEditablePropertiesUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable properties"))))),(0,r.kt)("h2",{id:"descriptionupdateinput"},"DescriptionUpdateInput"),(0,r.kt)("p",null,"Incubating. Updates the description of a resource. Currently supports DatasetField descriptions only"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The new description"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the resource to attach the description to, eg dataset urn"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResourceType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/enums#subresourcetype"},(0,r.kt)("code",null,"SubResourceType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional sub resource type"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResource",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A sub resource identitifer, eg dataset field path"))))),(0,r.kt)("h2",{id:"editableschemafieldinfoupdate"},"EditableSchemaFieldInfoUpdate"),(0,r.kt)("p",null,"Update to writable schema field metadata"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"fieldPath",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Flattened name of a field identifying the field the editable info is applied to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Edited description of the field"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"globalTags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Tags associated with the field"))))),(0,r.kt)("h2",{id:"editableschemametadataupdate"},"EditableSchemaMetadataUpdate"),(0,r.kt)("p",null,"Update to editable schema metadata of the dataset"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableSchemaFieldInfo",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#editableschemafieldinfoupdate"},(0,r.kt)("code",null,"[EditableSchemaFieldInfoUpdate!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to writable schema field metadata"))))),(0,r.kt)("h2",{id:"facetfilterinput"},"FacetFilterInput"),(0,r.kt)("p",null,"Facet filters to apply to search results"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"field",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Name of field to filter by"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"value",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Value of the field to filter by"))))),(0,r.kt)("h2",{id:"globaltagsupdate"},"GlobalTagsUpdate"),(0,r.kt)("p",null,"Deprecated, use addTag or removeTag mutation instead\nUpdate to the Tags associated with a Metadata Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#tagassociationupdate"},(0,r.kt)("code",null,"[TagAssociationUpdate!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The new set of tags"))))),(0,r.kt)("h2",{id:"institutionalmemorymetadataupdate"},"InstitutionalMemoryMetadataUpdate"),(0,r.kt)("p",null,"An institutional memory to add to a Metadata Entity\nTODO Add a USER or GROUP actor enum"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"url",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Link to a document or wiki page or another internal resource"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Description of the resource"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"author",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The corp user urn of the author of the metadata"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"createdAt",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The time at which this metadata was created"))))),(0,r.kt)("h2",{id:"institutionalmemoryupdate"},"InstitutionalMemoryUpdate"),(0,r.kt)("p",null,"An update for the institutional memory information for a Metadata Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"elements",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#institutionalmemorymetadataupdate"},(0,r.kt)("code",null,"[InstitutionalMemoryMetadataUpdate!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The individual references in the institutional memory"))))),(0,r.kt)("h2",{id:"listpoliciesinput"},"ListPoliciesInput"),(0,r.kt)("p",null,"Input required when listing DataHub Access Policies"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of Policies to be returned in the result set"))))),(0,r.kt)("h2",{id:"ownershipupdate"},"OwnershipUpdate"),(0,r.kt)("p",null,"An update for the ownership information for a Metadata Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"owners",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#ownerupdate"},(0,r.kt)("code",null,"[OwnerUpdate!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The updated list of owners"))))),(0,r.kt)("h2",{id:"ownerupdate"},"OwnerUpdate"),(0,r.kt)("p",null,"An owner to add to a Metadata Entity\nTODO Add a USER or GROUP actor enum"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"owner",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The owner URN, either a corpGroup or corpuser"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/enums#ownershiptype"},(0,r.kt)("code",null,"OwnershipType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The owner type"))))),(0,r.kt)("h2",{id:"policyupdateinput"},"PolicyUpdateInput"),(0,r.kt)("p",null,"Input provided when creating or updating an Access Policy"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/enums#policytype"},(0,r.kt)("code",null,"PolicyType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The Policy Type"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The Policy name"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"state",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/enums#policystate"},(0,r.kt)("code",null,"PolicyState!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The Policy state"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A Policy description"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#resourcefilterinput"},(0,r.kt)("code",null,"ResourceFilterInput"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The set of resources that the Policy privileges apply to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"privileges",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The set of privileges that the Policy grants"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"actors",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#actorfilterinput"},(0,r.kt)("code",null,"ActorFilterInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The set of actors that the Policy privileges are granted to"))))),(0,r.kt)("h2",{id:"relationshipsinput"},"RelationshipsInput"),(0,r.kt)("p",null,"Input for the list relationships field of an Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"types",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The types of relationships to query, representing an OR"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"direction",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/enums#relationshipdirection"},(0,r.kt)("code",null,"RelationshipDirection!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The direction of the relationship, either incoming or outgoing from the source entity"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of results to be returned"))))),(0,r.kt)("h2",{id:"resourcefilterinput"},"ResourceFilterInput"),(0,r.kt)("p",null,"Input required when creating or updating an Access Policies Determines which resources the Policy applies to"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The type of the resource the policy should apply to Not required because in the future we want to support filtering by type OR by domain"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A list of specific resource urns to apply the filter to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"allResources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether of not to apply the filter to all resources of the type"))))),(0,r.kt)("h2",{id:"searchinput"},"SearchInput"),(0,r.kt)("p",null,"Input arguments for a full text search query"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"EntityType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The Metadata Entity type to be searched against"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The raw query string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The offset of the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of entities to include in result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Facet filters to apply to search results"))))),(0,r.kt)("h2",{id:"tagassociationinput"},"TagAssociationInput"),(0,r.kt)("p",null,"Input provided when updating the association between a Metadata Entity and a Tag"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"tagUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Tag to add or remove"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target Metadata Entity to add or remove the Tag to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResourceType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/enums#subresourcetype"},(0,r.kt)("code",null,"SubResourceType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional type of a sub resource to attach the Tag to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResource",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional sub resource identifier to attach the Tag to"))))),(0,r.kt)("h2",{id:"tagassociationupdate"},"TagAssociationUpdate"),(0,r.kt)("p",null,"Deprecated, use addTag or removeTag mutation instead\nA tag update to be applied"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"tag",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#tagupdateinput"},(0,r.kt)("code",null,"TagUpdateInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The tag being applied"))))),(0,r.kt)("h2",{id:"tagupdateinput"},"TagUpdateInput"),(0,r.kt)("p",null,"Deprecated, use addTag or removeTag mutations instead\nAn update for a particular Tag entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Tag"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The display name of a Tag"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Description of the tag"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Ownership metadata of the tag"))))),(0,r.kt)("h2",{id:"termassociationinput"},"TermAssociationInput"),(0,r.kt)("p",null,"Input provided when updating the association between a Metadata Entity and a Glossary Term"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"termUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Glossary Term to add or remove"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target Metadata Entity to add or remove the Glossary Term from"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResourceType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/enums#subresourcetype"},(0,r.kt)("code",null,"SubResourceType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional type of a sub resource to attach the Glossary Term to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResource",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional sub resource identifier to attach the Glossary Term to"))))))}p.isMDXComponent=!0}}]);