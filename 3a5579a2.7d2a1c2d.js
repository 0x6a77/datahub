(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{165:function(e,t,a){"use strict";a.d(t,"a",(function(){return h})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=n.a.createContext({}),l=function(e){var t=n.a.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},h=function(e){var t=l(e.components);return n.a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},b=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=l(a),b=r,m=h["".concat(o,".").concat(b)]||h[b]||u[b]||i;return a?n.a.createElement(m,c(c({ref:t},d),{},{components:a})):n.a.createElement(m,c({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var d=2;d<i;d++)o[d]=a[d];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},236:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/datahub-architecture-30b34a888241e0780c72b7f618137fe4.png"},94:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return l}));var r=a(3),n=a(7),i=(a(0),a(165)),o={title:"Architecture Overview",hide_title:!0,slug:"/architecture/architecture",custom_edit_url:"https://github.com/linkedin/datahub/blob/master/docs/architecture/architecture.md"},c={unversionedId:"docs/architecture/architecture",id:"docs/architecture/architecture",isDocsHomePage:!1,title:"Architecture Overview",description:"DataHub Architecture Overview",source:"@site/genDocs/docs/architecture/architecture.md",slug:"/architecture/architecture",permalink:"/docs/architecture/architecture",editUrl:"https://github.com/linkedin/datahub/blob/master/docs/architecture/architecture.md",version:"current",sidebar:"overviewSidebar",previous:{title:"Metadata Ingestion",permalink:"/docs/metadata-ingestion"},next:{title:"Metadata Ingestion Architecture",permalink:"/docs/architecture/metadata-ingestion"}},s=[{value:"The Components",id:"the-components",children:[{value:"Ingestion",id:"ingestion",children:[]},{value:"Serving",id:"serving",children:[]},{value:"Frontend",id:"frontend",children:[]}]},{value:"Architecture Highlights",id:"architecture-highlights",children:[{value:"Schema-first approach to Metadata Modeling",id:"schema-first-approach-to-metadata-modeling",children:[]},{value:"Stream-based Real-time Metadata Platform",id:"stream-based-real-time-metadata-platform",children:[]},{value:"Federated Metadata Serving",id:"federated-metadata-serving",children:[]}]}],d={rightToc:s};function l(e){var t=e.components,o=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},d,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"datahub-architecture-overview"},"DataHub Architecture Overview"),Object(i.b)("p",null,"We highly recommend that you read the excellent ",Object(i.b)("a",{parentName:"p",href:"https://engineering.linkedin.com/blog/2020/datahub-popular-metadata-architectures-explained"},"metadata architectures blog post")," that describes the three generations of metadata architectures, and goes into a\nlot of detail around the motivations and evolution of the DataHub architecture in comparison with other data discovery solutions and catalogs."),Object(i.b)("p",null,"The figure below describes the high-level architecture of DataHub, a third-generation metadata platform."),Object(i.b)("p",null,Object(i.b)("img",{alt:"datahub-architecture",src:a(236).default})),Object(i.b)("h2",{id:"the-components"},"The Components"),Object(i.b)("p",null,"The DataHub deployables are split into three components:"),Object(i.b)("h3",{id:"ingestion"},"Ingestion"),Object(i.b)("p",null,"This component controls how metadata is integrated with DataHub. Read ",Object(i.b)("a",{parentName:"p",href:"/docs/architecture/metadata-ingestion"},"datahub-ingestion")," to learn more."),Object(i.b)("h3",{id:"serving"},"Serving"),Object(i.b)("p",null,"The component is responsible for storing and querying data within DataHub. Read ",Object(i.b)("a",{parentName:"p",href:"/docs/architecture/metadata-serving"},"datahub-serving")," to learn more. "),Object(i.b)("h3",{id:"frontend"},"Frontend"),Object(i.b)("p",null,"This is the user-facing application that powers search and discovery over the metadata graph. Read ",Object(i.b)("a",{parentName:"p",href:"/docs/datahub-web-react"},"react-frontend")," to learn more. "),Object(i.b)("h2",{id:"architecture-highlights"},"Architecture Highlights"),Object(i.b)("p",null,"There are three main highlights of DataHub's architecture. "),Object(i.b)("h3",{id:"schema-first-approach-to-metadata-modeling"},"Schema-first approach to Metadata Modeling"),Object(i.b)("p",null,"DataHub's metadata model is described using a ",Object(i.b)("a",{parentName:"p",href:"https://linkedin.github.io/rest.li/pdl_schema"},"serialization agnostic language"),". Both ",Object(i.b)("a",{parentName:"p",href:"https://github.com/linkedin/datahub/blob/master/gms"},"REST")," and well as ",Object(i.b)("a",{parentName:"p",href:"https://github.com/linkedin/datahub/blob/master/datahub-web-react/src/graphql"},"GraphQL API-s")," are supported. In addition, DataHub supports an ",Object(i.b)("a",{parentName:"p",href:"https://github.com/linkedin/datahub/blob/master/metadata-events"},"AVRO-based API")," over Kafka to communicate metadata changes and subscribe to them. Our ",Object(i.b)("a",{parentName:"p",href:"/docs/roadmap"},"roadmap")," includes a milestone to support no-code metadata model edits very soon, which will allow for even more ease of use, while retaining all the benefits of a typed API. Read about metadata modeling at ",Object(i.b)("a",{parentName:"p",href:"/docs/how/metadata-modelling"},"metadata modeling"),"."),Object(i.b)("h3",{id:"stream-based-real-time-metadata-platform"},"Stream-based Real-time Metadata Platform"),Object(i.b)("p",null,"DataHub's metadata infrastructure is stream-oriented, which allows for changes in metadata to be communicated and reflected within the platform within seconds. You can also subscribe to changes happening in DataHub's metadata, allowing you to build real-time metadata-driven systems. For example, you can build an access-control system that can observe a previously world-readable dataset adding a new schema field which contains PII, and locks down that dataset for access control reviews."),Object(i.b)("h3",{id:"federated-metadata-serving"},"Federated Metadata Serving"),Object(i.b)("p",null,"DataHub comes with a single ",Object(i.b)("a",{parentName:"p",href:"https://github.com/linkedin/datahub/blob/master/gms"},"metadata service (gms)")," as part of the open source repository. However, it also supports federated metadata services which can be owned and operated by different teams \u2013\u2013 in fact that is how LinkedIn runs DataHub internally. The federated services communicate with the central search index and graph using Kafka, to support global search and discovery while still enabling decoupled ownership of metadata. This kind of architecture is very amenable for companies who are implementing ",Object(i.b)("a",{parentName:"p",href:"https://martinfowler.com/articles/data-monolith-to-mesh.html"},"data mesh"),"."))}l.isMDXComponent=!0}}]);